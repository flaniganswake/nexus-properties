<!DOCTYPE html>
<!-- saved from url=(0079)http://django-tastypie.readthedocs.org/en/latest/interacting.html#fetching-data -->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" lang="en" style=""><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Interacting With The API — Tastypie 0.11.1-dev documentation</title>
  

  
  

  
  <link href="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/css" rel="stylesheet" type="text/css">

  
  

    <script type="text/javascript" async="" src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/ga.js"></script><script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:'',
        VERSION:'0.11.1-dev',
        COLLAPSE_INDEX:false,
        FILE_SUFFIX:'.html',
        HAS_SOURCE:  true
      };
    </script>
      <script type="text/javascript" src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/jquery-2.0.3.min.js"></script>
      <script type="text/javascript" src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/jquery-migrate-1.2.1.min.js"></script>
      <script type="text/javascript" src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/underscore.js"></script>
      <script type="text/javascript" src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/doctools.js"></script>
      <script type="text/javascript" src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/readthedocs-doc-embed.js"></script>

    

  

  
  

  
    <link rel="stylesheet" href="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/sphinx_rtd_theme.css" type="text/css">
  
    <link rel="stylesheet" href="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/readthedocs-doc-embed.css" type="text/css">
  
    <link rel="top" title="Tastypie 0.11.1-dev documentation" href="http://django-tastypie.readthedocs.org/en/latest/index.html">
        <link rel="next" title="Tastypie Settings" href="http://django-tastypie.readthedocs.org/en/latest/settings.html">
        <link rel="prev" title="Getting Started with Tastypie" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html">
 
<!-- RTD Extra Head -->
<script type="text/javascript">
  // This is included here because other places don't have access to the pagename variable.
  var READTHEDOCS_DATA = {
    project: "django-tastypie",
    version: "latest",
    page: "interacting",
    theme: "sphinx_rtd_theme",
    docroot: "/docs/"
  }
  // Old variables
  var doc_version = "latest";
  var doc_slug = "django-tastypie";
  var page_name = "interacting";
  var html_theme = "sphinx_rtd_theme";
</script>
<!-- RTD Analytics Code -->
<!-- Included in the header because you don't have a footer block. -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-17997319-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!-- end RTD Analytics Code -->


<!-- end RTD <extrahead> -->


  <script src="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" style="">

  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-nav-search">
        <a href="http://django-tastypie.readthedocs.org/en/latest/toc.html" class="icon icon-home"> Tastypie</a>
        <form id="rtd-search-form" autocomplete="off" class="wy-form" action="http://django-tastypie.readthedocs.org/en/latest/search.html" method="get">
  <input type="text" name="q" placeholder="Search docs">
  <input type="hidden" name="check_keywords" value="yes">
  <input type="hidden" name="area" value="default">
</form>
      </div>

      <div class="wy-menu wy-menu-vertical" data-spy="affix">
        
        
            <ul class="current current">
<li class="toctree-l1 current"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html">Welcome to Tastypie!</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html">Getting Started with Tastypie</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="">Interacting With The API</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html">Tastypie Settings</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/non_orm_data_sources.html">Using Tastypie With Non-ORM Data Sources</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tools.html">Tools</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/testing.html">Testing</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/compatibility_notes.html">Compatibility Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/python3.html">Python 3 Support</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html">Resources</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/bundles.html">Bundles</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/api.html">Api</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/fields.html">Resource Fields</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html">Caching</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/validation.html">Validation</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authentication.html">Authentication</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authorization.html">Authorization</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/serialization.html">Serialization</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/throttling.html">Throttling</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/paginator.html">Paginator</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/geodjango.html">GeoDjango</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/content_types.html">ContentTypes and GenericForeignKeys</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html">Tastypie Cookbook</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/debugging.html">Debugging Tastypie</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html">Sites Using Tastypie</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/contributing.html">Contributing</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/release_notes/index.html">Release Notes</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#getting-help">Getting Help</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#quick-start">Quick Start</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#requirements">Requirements</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#required">Required</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#optional">Optional</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#why-tastypie">Why Tastypie?</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#reference-material">Reference Material</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/index.html#running-the-tests">Running The Tests</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html">Getting Started with Tastypie</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#installation">Installation</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#configuration">Configuration</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#creating-resources">Creating Resources</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#hooking-up-the-resource-s">Hooking Up The Resource(s)</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#creating-more-resources">Creating More Resources</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#adding-to-the-api">Adding To The Api</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#limiting-data-and-access">Limiting Data And Access</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html#beyond-the-basics">Beyond The Basics</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="current reference internal" href="">Interacting With The API</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#front-matter">Front Matter</a></li>
<li class="toctree-l2"><a class="reference internal" href="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/Interacting With The API — Tastypie 0.11.1-dev documentation.htm">Fetching Data</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#sending-data">Sending Data</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#deleting-data">Deleting Data</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#bulk-operations">Bulk Operations</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#you-did-it">You Did It!</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html">Tastypie Settings</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#api-limit-per-page"><tt class="docutils literal"><span class="pre">API_LIMIT_PER_PAGE</span></tt></a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#tastypie-full-debug"><tt class="docutils literal"><span class="pre">TASTYPIE_FULL_DEBUG</span></tt></a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#tastypie-canned-error"><tt class="docutils literal"><span class="pre">TASTYPIE_CANNED_ERROR</span></tt></a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#tastypie-allow-missing-slash"><tt class="docutils literal"><span class="pre">TASTYPIE_ALLOW_MISSING_SLASH</span></tt></a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#tastypie-datetime-formatting"><tt class="docutils literal"><span class="pre">TASTYPIE_DATETIME_FORMATTING</span></tt></a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#tastypie-default-formats"><tt class="docutils literal"><span class="pre">TASTYPIE_DEFAULT_FORMATS</span></tt></a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/settings.html#tastypie-abstract-apikey"><tt class="docutils literal"><span class="pre">TASTYPIE_ABSTRACT_APIKEY</span></tt></a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/non_orm_data_sources.html">Using Tastypie With Non-ORM Data Sources</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/non_orm_data_sources.html#approach">Approach</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/non_orm_data_sources.html#using-riak-for-messageresource">Using Riak for MessageResource</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tools.html">Tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tools.html#browser">Browser</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tools.html#extensions">Extensions</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tools.html#python">Python</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/tools.html#javascript">Javascript</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/testing.html">Testing</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/testing.html#example-usage">Example Usage</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/compatibility_notes.html">Compatibility Notes</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/compatibility_notes.html#apikey-database-index"><tt class="docutils literal"><span class="pre">ApiKey</span></tt> Database Index</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/python3.html">Python 3 Support</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/python3.html#incompatibilities">Incompatibilities</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/python3.html#notes">Notes</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html">Resources</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#quick-start">Quick Start</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#why-class-based">Why Class-Based?</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#why-resource-vs-modelresource">Why <tt class="docutils literal"><span class="pre">Resource</span></tt> vs. <tt class="docutils literal"><span class="pre">ModelResource</span></tt>?</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#flow-through-the-request-response-cycle">Flow Through The Request/Response Cycle</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#why-resource-uris">Why Resource URIs?</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#accessing-the-current-request">Accessing The Current Request</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#advanced-data-preparation">Advanced Data Preparation</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#reverse-relationships">Reverse “Relationships”</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#resource-options-aka-meta">Resource Options (AKA <tt class="docutils literal"><span class="pre">Meta</span></tt>)</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#basic-filtering">Basic Filtering</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#advanced-filtering">Advanced Filtering</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#using-put-delete-patch-in-unsupported-places">Using PUT/DELETE/PATCH In Unsupported Places</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#resource-methods"><tt class="docutils literal"><span class="pre">Resource</span></tt> Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#modelresource-methods"><tt class="docutils literal"><span class="pre">ModelResource</span></tt> Methods</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/bundles.html">Bundles</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/bundles.html#what-are-bundles">What Are Bundles?</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/bundles.html#attributes">Attributes</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/api.html">Api</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/api.html#quick-start">Quick Start</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/api.html#api-methods"><tt class="docutils literal"><span class="pre">Api</span></tt> Methods</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/fields.html">Resource Fields</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/fields.html#quick-start">Quick Start</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/fields.html#standard-data-fields">Standard Data Fields</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/fields.html#relationship-fields">Relationship Fields</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html">Caching</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html#caching-options">Caching Options</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html#implementing-your-own-cache">Implementing Your Own Cache</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html#http-cache-control">HTTP Cache-Control</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/caching.html#http-vary">HTTP Vary</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/validation.html">Validation</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/validation.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/validation.html#validation-options">Validation Options</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/validation.html#implementing-your-own-validation">Implementing Your Own Validation</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authentication.html">Authentication</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authentication.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authentication.html#authentication-options">Authentication Options</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authentication.html#implementing-your-own-authentication-authorization">Implementing Your Own Authentication/Authorization</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authorization.html">Authorization</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authorization.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authorization.html#authorization-options">Authorization Options</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authorization.html#the-authorization-api">The <tt class="docutils literal"><span class="pre">Authorization</span></tt> API</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/authorization.html#implementing-your-own-authorization">Implementing Your Own Authorization</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/serialization.html">Serialization</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/serialization.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/serialization.html#serialization-security">Serialization Security</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/serialization.html#implementing-your-own-serializer">Implementing Your Own Serializer</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/serialization.html#serializer-methods"><tt class="docutils literal"><span class="pre">Serializer</span></tt> Methods</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/throttling.html">Throttling</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/throttling.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/throttling.html#throttle-options">Throttle Options</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/throttling.html#implementing-your-own-throttle">Implementing Your Own Throttle</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/throttling.html#usage-with-resource">Usage with Resource</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/paginator.html">Paginator</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/paginator.html#usage">Usage</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/paginator.html#implementing-your-own-paginator">Implementing Your Own Paginator</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/geodjango.html">GeoDjango</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/geodjango.html#usage">Usage</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/content_types.html">ContentTypes and GenericForeignKeys</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/content_types.html#usage">Usage</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html">Tastypie Cookbook</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#creating-a-full-oauth-2-0-api">Creating a Full OAuth 2.0 API</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#adding-custom-values">Adding Custom Values</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#per-request-alterations-to-the-queryset">Per-Request Alterations To The Queryset</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#using-your-resource-in-regular-views">Using Your <tt class="docutils literal"><span class="pre">Resource</span></tt> In Regular Views</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#using-non-pk-data-for-your-urls">Using Non-PK Data For Your URLs</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#nested-resources">Nested Resources</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#adding-search-functionality">Adding Search Functionality</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#creating-per-user-resources">Creating per-user resources</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#camelcase-json-serialization">camelCase JSON Serialization</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#pretty-printed-json-serialization">Pretty-printed JSON Serialization</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#determining-format-via-url">Determining format via URL</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#adding-to-the-django-admin">Adding to the Django Admin</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/cookbook.html#using-sessionauthentication">Using <tt class="docutils literal"><span class="pre">SessionAuthentication</span></tt></a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/debugging.html">Debugging Tastypie</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/debugging.html#i-m-getting-xml-output-in-my-browser-but-i-want-json-output">“I’m getting XML output in my browser but I want JSON output!”</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/debugging.html#what-s-the-format-for-a-post-or-put">“What’s the format for a POST or PUT?”</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/debugging.html#why-is-my-syncdb-with-superuser-failing-with-a-databaseerror">“Why is my syncdb with superuser failing with a DatabaseError?”</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html">Sites Using Tastypie</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#ljworld-marketplace">LJWorld Marketplace</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#forkinit">Forkinit</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#read-the-docs">Read The Docs</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#luzme">Luzme</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#politifact">Politifact</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#localwiki">LocalWiki</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#i-am-cc-org">I-Am-CC.org</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#dbpatterns">Dbpatterns</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/who_uses.html#courtlistener">CourtListener</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/contributing.html">Contributing</a><ul>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/contributing.html#philosophy">Philosophy</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/contributing.html#guidelines-for-reporting-an-issue-feature">Guidelines For Reporting An Issue/Feature</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/contributing.html#guidelines-for-contributing-code">Guidelines For Contributing Code</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/contributing.html#guidelines-for-core-contributors">Guidelines For Core Contributors</a></li>
</ul>
</li>
</ul>

        
      </div>
      &nbsp;
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top">
        <i data-toggle="wy-nav-top" class="icon icon-reorder"></i>
        <a href="http://django-tastypie.readthedocs.org/en/latest/toc.html">Tastypie</a>
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          <ul class="wy-breadcrumbs">
  <li><a href="http://django-tastypie.readthedocs.org/en/latest/toc.html">Docs</a> »</li>
  <li><a href="">Interacting With The API</a></li>
    <li class="wy-breadcrumbs-aside">
      
        <a href="https://github.com/toastdriven/django-tastypie/blob/master/docs/interacting.rst" class="icon icon-github"> Edit on GitHub</a>
      
    </li>
</ul>
<hr>

          
  <div class="section" id="interacting-with-the-api">
<span id="ref-interacting"></span><h1>Interacting With The API<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#interacting-with-the-api" title="Permalink to this headline">¶</a></h1>
<p>Now that you’ve got a shiny new REST-style API in place, let’s demonstrate how
to interact with it. We’ll assume that you have <a class="reference external" href="http://curl.haxx.se/">cURL</a> installed on your system
(generally available on most modern Mac &amp; Linux machines), but any tool that
allows you to control headers &amp; bodies on requests will do.</p>
<p>We’ll assume that we’re interacting with the following Tastypie code:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="c"># myapp/api/resources.py</span>
<span class="kn">from</span> <span class="nn">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">User</span>
<span class="kn">from</span> <span class="nn">tastypie.authorization</span> <span class="kn">import</span> <span class="n">Authorization</span>
<span class="kn">from</span> <span class="nn">tastypie</span> <span class="kn">import</span> <span class="n">fields</span>
<span class="kn">from</span> <span class="nn">tastypie.resources</span> <span class="kn">import</span> <span class="n">ModelResource</span><span class="p">,</span> <span class="n">ALL</span><span class="p">,</span> <span class="n">ALL_WITH_RELATIONS</span>
<span class="kn">from</span> <span class="nn">myapp.models</span> <span class="kn">import</span> <span class="n">Entry</span>


<span class="k">class</span> <span class="nc">UserResource</span><span class="p">(</span><span class="n">ModelResource</span><span class="p">):</span>
    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">queryset</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
        <span class="n">resource_name</span> <span class="o">=</span> <span class="s">'user'</span>
        <span class="n">excludes</span> <span class="o">=</span> <span class="p">[</span><span class="s">'email'</span><span class="p">,</span> <span class="s">'password'</span><span class="p">,</span> <span class="s">'is_active'</span><span class="p">,</span> <span class="s">'is_staff'</span><span class="p">,</span> <span class="s">'is_superuser'</span><span class="p">]</span>
        <span class="n">filtering</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">'username'</span><span class="p">:</span> <span class="n">ALL</span><span class="p">,</span>
        <span class="p">}</span>


<span class="k">class</span> <span class="nc">EntryResource</span><span class="p">(</span><span class="n">ModelResource</span><span class="p">):</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">fields</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">UserResource</span><span class="p">,</span> <span class="s">'user'</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">queryset</span> <span class="o">=</span> <span class="n">Entry</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
        <span class="n">resource_name</span> <span class="o">=</span> <span class="s">'entry'</span>
        <span class="n">authorization</span> <span class="o">=</span> <span class="n">Authorization</span><span class="p">()</span>
        <span class="n">filtering</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">'user'</span><span class="p">:</span> <span class="n">ALL_WITH_RELATIONS</span><span class="p">,</span>
            <span class="s">'pub_date'</span><span class="p">:</span> <span class="p">[</span><span class="s">'exact'</span><span class="p">,</span> <span class="s">'lt'</span><span class="p">,</span> <span class="s">'lte'</span><span class="p">,</span> <span class="s">'gte'</span><span class="p">,</span> <span class="s">'gt'</span><span class="p">],</span>
        <span class="p">}</span>


<span class="c"># urls.py</span>
<span class="kn">from</span> <span class="nn">django.conf.urls.defaults</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">tastypie.api</span> <span class="kn">import</span> <span class="n">Api</span>
<span class="kn">from</span> <span class="nn">myapp.api.resources</span> <span class="kn">import</span> <span class="n">EntryResource</span><span class="p">,</span> <span class="n">UserResource</span>

<span class="n">v1_api</span> <span class="o">=</span> <span class="n">Api</span><span class="p">(</span><span class="n">api_name</span><span class="o">=</span><span class="s">'v1'</span><span class="p">)</span>
<span class="n">v1_api</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">UserResource</span><span class="p">())</span>
<span class="n">v1_api</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">EntryResource</span><span class="p">())</span>

<span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">''</span><span class="p">,</span>
    <span class="c"># The normal jazz here...</span>
    <span class="p">(</span><span class="s">r'^blog/'</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">'myapp.urls'</span><span class="p">)),</span>
    <span class="p">(</span><span class="s">r'^api/'</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">v1_api</span><span class="o">.</span><span class="n">urls</span><span class="p">)),</span>
<span class="p">)</span>
</pre></div>
</div>
<p>Let’s fire up a shell &amp; start exploring the API!</p>
<div class="section" id="front-matter">
<h2>Front Matter<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#front-matter" title="Permalink to this headline">¶</a></h2>
<p>Tastypie tries to treat all clients &amp; all serialization types as equally as
possible. It also tries to be a good ‘Net citizen &amp; respects the HTTP method
used as well as the <tt class="docutils literal"><span class="pre">Accepts</span></tt> headers sent. Between these two, you control
all interactions with Tastypie through relatively few endpoints.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p>Should you try these URLs in your browser, be warned you <strong>WILL</strong> need to
append <tt class="docutils literal"><span class="pre">?format=json</span></tt> (or <tt class="docutils literal"><span class="pre">xml</span></tt> or <tt class="docutils literal"><span class="pre">yaml</span></tt>) to the URL. Your browser
requests <tt class="docutils literal"><span class="pre">application/xml</span></tt> before <tt class="docutils literal"><span class="pre">application/json</span></tt>, so you’ll always
get back XML if you don’t specify it.</p>
<p class="last">That’s also why it’s recommended that you explore via curl, because you
avoid your browser’s opinionated requests &amp; get something closer to what
any programmatic clients will get.</p>
</div>
</div>
<div class="section" id="fetching-data">
<h2>Fetching Data<a class="headerlink" href="./Interacting With The API — Tastypie 0.11.1-dev documentation_files/Interacting With The API — Tastypie 0.11.1-dev documentation.htm" title="Permalink to this headline">¶</a></h2>
<p>Since reading data out of an API is a very common activity (and the easiest
type of request to make), we’ll start there. Tastypie tries to expose various
parts of the API &amp; interlink things within the API (HATEOAS).</p>
<div class="section" id="api-wide">
<h3>Api-Wide<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#api-wide" title="Permalink to this headline">¶</a></h3>
<p>We’ll start at the highest level:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/</pre>
</div>
<p>You’ll get back something like:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"entry"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"list_endpoint"</span><span class="p">:</span> <span class="s">"/api/v1/entry/"</span><span class="p">,</span>
        <span class="s">"schema"</span><span class="p">:</span> <span class="s">"/api/v1/entry/schema/"</span>
    <span class="p">},</span>
    <span class="s">"user"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"list_endpoint"</span><span class="p">:</span> <span class="s">"/api/v1/user/"</span><span class="p">,</span>
        <span class="s">"schema"</span><span class="p">:</span> <span class="s">"/api/v1/user/schema/"</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This lists out all the different <tt class="docutils literal"><span class="pre">Resource</span></tt> classes you registered in your
URLconf with the API. Each one is listed by the <tt class="docutils literal"><span class="pre">resource_name</span></tt> you gave it
and provides the <tt class="docutils literal"><span class="pre">list_endpoint</span></tt> &amp; the <tt class="docutils literal"><span class="pre">schema</span></tt> for the resource.</p>
<p>Note that these links try to direct you to other parts of the API, to make
exploration/discovery easier. We’ll use these URLs in the next several
sections.</p>
<p>To demonstrate another format, you could run the following to get the XML
variant of the same information:</p>
<div class="highlight-python"><pre>curl -H "Accept: application/xml" http://localhost:8000/api/v1/</pre>
</div>
<p>To which you’d receive:</p>
<div class="highlight-python"><pre>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;response&gt;
  &lt;entry type="hash"&gt;
    &lt;list_endpoint&gt;/api/v1/entry/&lt;/list_endpoint&gt;
    &lt;schema&gt;/api/v1/entry/schema/&lt;/schema&gt;
  &lt;/entry&gt;
  &lt;user type="hash"&gt;
    &lt;list_endpoint&gt;/api/v1/user/&lt;/list_endpoint&gt;
    &lt;schema&gt;/api/v1/user/schema/&lt;/schema&gt;
  &lt;/user&gt;
&lt;/response&gt;</pre>
</div>
<p>We’ll stick to JSON for the rest of this document, but using XML should be OK
to do at any time.</p>
</div>
<div class="section" id="inspecting-the-resource-s-schema">
<span id="schema-inspection"></span><h3>Inspecting The Resource’s Schema<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#inspecting-the-resource-s-schema" title="Permalink to this headline">¶</a></h3>
<p>Since the api-wide view gave us a <tt class="docutils literal"><span class="pre">schema</span></tt> URL, let’s inspect that next.
We’ll use the <tt class="docutils literal"><span class="pre">entry</span></tt> resource. Again, a simple GET request by curl:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/entry/schema/</pre>
</div>
<p>This time, we get back a lot more data:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"default_format"</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">"fields"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"Unicode string data. Ex: </span><span class="se">\"</span><span class="s">Hello World</span><span class="se">\"</span><span class="s">"</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"string"</span>
        <span class="p">},</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"Unicode string data. Ex: </span><span class="se">\"</span><span class="s">Hello World</span><span class="se">\"</span><span class="s">"</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"string"</span>
        <span class="p">},</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"A date &amp; time as a string. Ex: </span><span class="se">\"</span><span class="s">2010-11-10T03:07:43</span><span class="se">\"</span><span class="s">"</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"datetime"</span>
        <span class="p">},</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"Unicode string data. Ex: </span><span class="se">\"</span><span class="s">Hello World</span><span class="se">\"</span><span class="s">"</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">true</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"string"</span>
        <span class="p">},</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"Unicode string data. Ex: </span><span class="se">\"</span><span class="s">Hello World</span><span class="se">\"</span><span class="s">"</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"string"</span>
        <span class="p">},</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"Unicode string data. Ex: </span><span class="se">\"</span><span class="s">Hello World</span><span class="se">\"</span><span class="s">"</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"string"</span>
        <span class="p">},</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">"help_text"</span><span class="p">:</span> <span class="s">"A single related resource. Can be either a URI or set of nested resource data."</span><span class="p">,</span>
            <span class="s">"nullable"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"readonly"</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
            <span class="s">"type"</span><span class="p">:</span> <span class="s">"related"</span>
        <span class="p">}</span>
    <span class="p">},</span>
    <span class="s">"filtering"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="p">[</span><span class="s">"exact"</span><span class="p">,</span> <span class="s">"lt"</span><span class="p">,</span> <span class="s">"lte"</span><span class="p">,</span> <span class="s">"gte"</span><span class="p">,</span> <span class="s">"gt"</span><span class="p">],</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="mi">2</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This lists out the <tt class="docutils literal"><span class="pre">default_format</span></tt> this resource responds with, the
<tt class="docutils literal"><span class="pre">fields</span></tt> on the resource &amp; the <tt class="docutils literal"><span class="pre">filtering</span></tt> options available. This
information can be used to prepare the other aspects of the code for the
data it can obtain &amp; ways to filter the resources.</p>
</div>
<div class="section" id="getting-a-collection-of-resources">
<h3>Getting A Collection Of Resources<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#getting-a-collection-of-resources" title="Permalink to this headline">¶</a></h3>
<p>Let’s get down to fetching live data. From the api-wide view, we’ll hit
the <tt class="docutils literal"><span class="pre">list_endpoint</span></tt> for <tt class="docutils literal"><span class="pre">entry</span></tt>:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/entry/</pre>
</div>
<p>We get back data that looks like:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"meta"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"limit"</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
        <span class="s">"next"</span><span class="p">:</span> <span class="n">null</span><span class="p">,</span>
        <span class="s">"offset"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
        <span class="s">"previous"</span><span class="p">:</span> <span class="n">null</span><span class="p">,</span>
        <span class="s">"total_count"</span><span class="p">:</span> <span class="mi">3</span>
    <span class="p">},</span>
    <span class="s">"objects"</span><span class="p">:</span> <span class="p">[{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"Welcome to my blog!"</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"1"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-20T00:46:38"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/1/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"first-post"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"First Post"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"Well, it's been awhile and I still haven't updated. "</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"2"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-21T00:46:58"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/2/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"second-post"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"Second Post"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"I'm really excited to get started with this new blog. It's gonna be great!"</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"3"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-20T00:47:30"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/3/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"my-blog"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"My Blog"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/2/"</span>
    <span class="p">}]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Some things to note:</p>
<blockquote>
<div><ul class="simple">
<li>By default, you get a paginated set of objects (20 per page is the default).</li>
<li>In the <tt class="docutils literal"><span class="pre">meta</span></tt>, you get a <tt class="docutils literal"><span class="pre">previous</span></tt> &amp; <tt class="docutils literal"><span class="pre">next</span></tt>. If available, these are
URIs to the previous &amp; next pages.</li>
<li>You get a list of resources/objects under the <tt class="docutils literal"><span class="pre">objects</span></tt> key.</li>
<li>Each resources/object has a <tt class="docutils literal"><span class="pre">resource_uri</span></tt> field that points to the
detail view for that object.</li>
<li>The foreign key to <tt class="docutils literal"><span class="pre">User</span></tt> is represented as a URI by default. If you’re
looking for the full <tt class="docutils literal"><span class="pre">UserResource</span></tt> to be embedded in this view, you’ll
need to add <tt class="docutils literal"><span class="pre">full=True</span></tt> to the <tt class="docutils literal"><span class="pre">fields.ToOneField</span></tt>.</li>
</ul>
</div></blockquote>
<p>If you want to skip paginating, simply run:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/entry/?limit=0</pre>
</div>
<p>Be warned this will return all objects, so it may be a CPU/IO-heavy operation
on large datasets.</p>
<p>Let’s try filtering on the resource. Since we know we can filter on the
<tt class="docutils literal"><span class="pre">user</span></tt>, we’ll fetch all posts by the <tt class="docutils literal"><span class="pre">daniel</span></tt> user with:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/entry/?user__username=daniel</pre>
</div>
<p>We get back what we asked for:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"meta"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"limit"</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
        <span class="s">"next"</span><span class="p">:</span> <span class="n">null</span><span class="p">,</span>
        <span class="s">"offset"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
        <span class="s">"previous"</span><span class="p">:</span> <span class="n">null</span><span class="p">,</span>
        <span class="s">"total_count"</span><span class="p">:</span> <span class="mi">2</span>
    <span class="p">},</span>
    <span class="s">"objects"</span><span class="p">:</span> <span class="p">[{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"Welcome to my blog!"</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"1"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-20T00:46:38"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/1/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"first-post"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"First Post"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"Well, it's been awhile and I still haven't updated. "</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"2"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-21T00:46:58"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/2/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"second-post"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"Second Post"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span>
    <span class="p">}]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Where there were three posts before, now there are only two.</p>
</div>
<div class="section" id="getting-a-detail-resource">
<h3>Getting A Detail Resource<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#getting-a-detail-resource" title="Permalink to this headline">¶</a></h3>
<p>Since each resource/object in the list view had a <tt class="docutils literal"><span class="pre">resource_uri</span></tt>, let’s
explore what’s there:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/entry/1/</pre>
</div>
<p>We get back a similar set of data that we received from the list view:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"body"</span><span class="p">:</span> <span class="s">"Welcome to my blog!"</span><span class="p">,</span>
    <span class="s">"id"</span><span class="p">:</span> <span class="s">"1"</span><span class="p">,</span>
    <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-20T00:46:38"</span><span class="p">,</span>
    <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/1/"</span><span class="p">,</span>
    <span class="s">"slug"</span><span class="p">:</span> <span class="s">"first-post"</span><span class="p">,</span>
    <span class="s">"title"</span><span class="p">:</span> <span class="s">"First Post"</span><span class="p">,</span>
    <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Where this proves useful (for example) is present in the data we got back. We
know the URI of the <tt class="docutils literal"><span class="pre">User</span></tt> associated with this blog entry. Let’s run:</p>
<div class="highlight-python"><pre>curl http://localhost:8000/api/v1/user/1/</pre>
</div>
<p>Without ever seeing any aspect of the <tt class="docutils literal"><span class="pre">UserResource</span></tt> &amp; just following the URI
given, we get back:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"date_joined"</span><span class="p">:</span> <span class="s">"2011-05-20T00:42:14.990617"</span><span class="p">,</span>
    <span class="s">"first_name"</span><span class="p">:</span> <span class="s">""</span><span class="p">,</span>
    <span class="s">"id"</span><span class="p">:</span> <span class="s">"1"</span><span class="p">,</span>
    <span class="s">"last_login"</span><span class="p">:</span> <span class="s">"2011-05-20T00:44:57.510066"</span><span class="p">,</span>
    <span class="s">"last_name"</span><span class="p">:</span> <span class="s">""</span><span class="p">,</span>
    <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span><span class="p">,</span>
    <span class="s">"username"</span><span class="p">:</span> <span class="s">"daniel"</span>
<span class="p">}</span>
</pre></div>
</div>
<p>You can do a similar fetch using the following Javascript/jQuery (though be
wary of same-domain policy):</p>
<div class="highlight-python"><pre>$.ajax({
  url: 'http://localhost:8000/api/v1/user/1/',
  type: 'GET',
  accepts: 'application/json',
  dataType: 'json'
})</pre>
</div>
</div>
<div class="section" id="selecting-a-subset-of-resources">
<h3>Selecting A Subset Of Resources<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#selecting-a-subset-of-resources" title="Permalink to this headline">¶</a></h3>
<p>Sometimes you may want back more than one record, but not an entire list view
nor do you want to do multiple requests. Tastypie includes a “set” view, which
lets you cherry-pick the objects you want. For example, if we just want the
first &amp; third <tt class="docutils literal"><span class="pre">Entry</span></tt> resources, we’d run:</p>
<div class="highlight-python"><pre>curl "http://localhost:8000/api/v1/entry/set/1;3/"</pre>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Quotes are needed in this case because of the semicolon delimiter between
primary keys. Without the quotes, bash tries to split it into two statements.
No extraordinary quoting will be necessary in your application (unless your
API client is written in bash :D).</p>
</div>
<p>And we get back just those two objects:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"objects"</span><span class="p">:</span> <span class="p">[{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"Welcome to my blog!"</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"1"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-20T00:46:38"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/1/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"first-post"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"First Post"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/1/"</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="s">"body"</span><span class="p">:</span> <span class="s">"I'm really excited to get started with this new blog. It's gonna be great!"</span><span class="p">,</span>
        <span class="s">"id"</span><span class="p">:</span> <span class="s">"3"</span><span class="p">,</span>
        <span class="s">"pub_date"</span><span class="p">:</span> <span class="s">"2011-05-20T00:47:30"</span><span class="p">,</span>
        <span class="s">"resource_uri"</span><span class="p">:</span> <span class="s">"/api/v1/entry/3/"</span><span class="p">,</span>
        <span class="s">"slug"</span><span class="p">:</span> <span class="s">"my-blog"</span><span class="p">,</span>
        <span class="s">"title"</span><span class="p">:</span> <span class="s">"My Blog"</span><span class="p">,</span>
        <span class="s">"user"</span><span class="p">:</span> <span class="s">"/api/v1/user/2/"</span>
    <span class="p">}]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Note that, like the list view, you get back a list of <tt class="docutils literal"><span class="pre">objects</span></tt>. Unlike the
list view, there is <strong>NO</strong> pagination applied to these objects. You asked for
them, you’re going to get them all.</p>
</div>
</div>
<div class="section" id="sending-data">
<h2>Sending Data<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#sending-data" title="Permalink to this headline">¶</a></h2>
<p>Tastypie also gives you full write capabilities in the API. Since the
<tt class="docutils literal"><span class="pre">EntryResource</span></tt> has the no-limits <tt class="docutils literal"><span class="pre">Authentication</span></tt> &amp; <tt class="docutils literal"><span class="pre">Authorization</span></tt> on
it, we can freely write data.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p>Note that this is a huge security hole as well. Don’t put unauthorized
write-enabled resources on the Internet, because someone will trash your
data.</p>
<p class="last">This is why <tt class="docutils literal"><span class="pre">ReadOnlyAuthorization</span></tt> is the default in Tastypie &amp; why you
must override to provide more access.</p>
</div>
<p>The good news is that there are no new URLs to learn. The “list” &amp; “detail”
URLs we’ve been using to fetch data <em>ALSO</em> support the
<tt class="docutils literal"><span class="pre">POST</span></tt>/<tt class="docutils literal"><span class="pre">PUT</span></tt>/<tt class="docutils literal"><span class="pre">DELETE</span></tt> HTTP methods.</p>
<div class="section" id="creating-a-new-resource-post">
<h3>Creating A New Resource (POST)<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#creating-a-new-resource-post" title="Permalink to this headline">¶</a></h3>
<p>Let’s add a new entry. To create new data, we’ll switch from <tt class="docutils literal"><span class="pre">GET</span></tt> requests
to the familiar <tt class="docutils literal"><span class="pre">POST</span></tt> request.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>Tastypie encourages “round-trippable” data, which means the data you
can GET should be able to be POST/PUT’d back to recreate the same
object.</p>
<p class="last">If you’re ever in question about what you should send, do a GET on
another object &amp; see what Tastypie thinks it should look like.</p>
</div>
<p>To create new resources/objects, you will <tt class="docutils literal"><span class="pre">POST</span></tt> to the list endpoint of
a resource. Trying to <tt class="docutils literal"><span class="pre">POST</span></tt> to a detail endpoint has a different meaning in
the REST mindset (meaning to add a resource as a child of a resource of the
same type).</p>
<p>As with all Tastypie requests, the headers we request are important. Since
we’ve been using primarily JSON throughout, let’s send a new entry in JSON
format:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X POST --data '{"body": "This will prbbly be my lst post.", "pub_date": "2011-05-22T00:46:38", "slug": "another-post", "title": "Another Post", "user": "/api/v1/user/1/"}' http://localhost:8000/api/v1/entry/</pre>
</div>
<p>The <tt class="docutils literal"><span class="pre">Content-Type</span></tt> header here informs Tastypie that we’re sending it JSON.
We send the data as a JSON-serialized body (<strong>NOT</strong> as form-data in the form of
URL parameters). What we get back is the following response:</p>
<div class="highlight-python"><pre>HTTP/1.0 201 CREATED
Date: Fri, 20 May 2011 06:48:36 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Type: text/html; charset=utf-8
Location: http://localhost:8000/api/v1/entry/4/</pre>
</div>
<p>You’ll also note that we get a correct HTTP status code back (201) &amp; a
<tt class="docutils literal"><span class="pre">Location</span></tt> header, which gives us the URI to our newly created resource.</p>
<p>Passing <tt class="docutils literal"><span class="pre">--dump-header</span> <span class="pre">-</span></tt> is important, because it gives you all the headers
as well as the status code. When things go wrong, this will be useful
information to help with debugging. For instance, if we send a request without
a <tt class="docutils literal"><span class="pre">user</span></tt>:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X POST --data '{"body": "This will prbbly be my lst post.", "pub_date": "2011-05-22T00:46:38", "slug": "another-post", "title": "Another Post"}' http://localhost:8000/api/v1/entry/</pre>
</div>
<p>We get back:</p>
<div class="highlight-python"><pre>HTTP/1.0 400 BAD REQUEST
Date: Fri, 20 May 2011 06:53:02 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Type: text/html; charset=utf-8

The 'user' field has no data and doesn't allow a default or null value.</pre>
</div>
<p>You can do a similar POST using the following Javascript/jQuery (though be
wary of same-domain policy):</p>
<div class="highlight-python"><pre># This may require the ``json2.js`` library for older browsers.
var data = JSON.stringify({
    "body": "This will prbbly be my lst post.",
    "pub_date": "2011-05-22T00:46:38",
    "slug": "another-post",
    "title": "Another Post"
});

$.ajax({
  url: 'http://localhost:8000/api/v1/entry/',
  type: 'POST',
  contentType: 'application/json',
  data: data,
  dataType: 'json',
  processData: false
})</pre>
</div>
</div>
<div class="section" id="updating-an-existing-resource-put">
<h3>Updating An Existing Resource (PUT)<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#updating-an-existing-resource-put" title="Permalink to this headline">¶</a></h3>
<p>You might have noticed that we made some typos when we submitted the POST
request. We can fix this using a <tt class="docutils literal"><span class="pre">PUT</span></tt> request to the detail endpoint (modify
this instance of a resource).:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X PUT --data '{"body": "This will probably be my last post.", "pub_date": "2011-05-22T00:46:38", "slug": "another-post", "title": "Another Post", "user": "/api/v1/user/1/"}' http://localhost:8000/api/v1/entry/4/</pre>
</div>
<p>After fixing up the <tt class="docutils literal"><span class="pre">body</span></tt>, we get back:</p>
<div class="highlight-python"><pre>HTTP/1.0 204 NO CONTENT
Date: Fri, 20 May 2011 07:13:21 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Length: 0
Content-Type: text/html; charset=utf-8</pre>
</div>
<p>We get a 204 status code, meaning our update was successful. We don’t get
a <tt class="docutils literal"><span class="pre">Location</span></tt> header back because we did the <tt class="docutils literal"><span class="pre">PUT</span></tt> on a detail URL, which
presumably did not change.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A <tt class="docutils literal"><span class="pre">PUT</span></tt> request requires that the entire resource representation be enclosed. Missing fields may cause errors, or be filled in by default values.</p>
</div>
</div>
<div class="section" id="partially-updating-an-existing-resource-patch">
<h3>Partially Updating An Existing Resource (PATCH)<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#partially-updating-an-existing-resource-patch" title="Permalink to this headline">¶</a></h3>
<p>In some cases, you may not want to send the entire resource when updating. To update just a subset of the fields, we can send a <tt class="docutils literal"><span class="pre">PATCH</span></tt> request to the detail endpoint.:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X PATCH --data '{"body": "This actually is my last post."}' http://localhost:8000/api/v1/entry/4/</pre>
</div>
<p>To which we should get back:</p>
<div class="highlight-python"><pre>HTTP/1.0 202 ACCEPTED
Date: Fri, 20 May 2011 07:13:21 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Length: 0
Content-Type: text/html; charset=utf-8</pre>
</div>
</div>
<div class="section" id="updating-a-whole-collection-of-resources-put">
<h3>Updating A Whole Collection Of Resources (PUT)<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#updating-a-whole-collection-of-resources-put" title="Permalink to this headline">¶</a></h3>
<p>You can also, in rare circumstances, update an entire collection of objects.
By sending a <tt class="docutils literal"><span class="pre">PUT</span></tt> request to the list view of a resource, you can replace
the entire collection.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">This deletes all of the objects first, then creates the objects afresh. This
is done because determining which objects are the same is actually difficult
to get correct in the general case for all people.</p>
</div>
<p>Send a request like:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X PUT --data '{"objects": [{"body": "Welcome to my blog!","id": "1","pub_date": "2011-05-20T00:46:38","resource_uri": "/api/v1/entry/1/","slug": "first-post","title": "First Post","user": "/api/v1/user/1/"},{"body": "I'm really excited to get started with this new blog. It's gonna be great!","id": "3","pub_date": "2011-05-20T00:47:30","resource_uri": "/api/v1/entry/3/","slug": "my-blog","title": "My Blog","user": "/api/v1/user/2/"}]}' http://localhost:8000/api/v1/entry/</pre>
</div>
<p>And you’ll get back a response like:</p>
<div class="highlight-python"><pre>HTTP/1.0 204 NO CONTENT
Date: Fri, 20 May 2011 07:13:21 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Length: 0
Content-Type: text/html; charset=utf-8</pre>
</div>
</div>
</div>
<div class="section" id="deleting-data">
<h2>Deleting Data<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#deleting-data" title="Permalink to this headline">¶</a></h2>
<p>No CRUD setup would be complete without the ability to delete resources/objects.
Deleting also requires significantly less complicated requests than
<tt class="docutils literal"><span class="pre">POST</span></tt>/<tt class="docutils literal"><span class="pre">PUT</span></tt>.</p>
<div class="section" id="deleting-a-single-resource">
<h3>Deleting A Single Resource<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#deleting-a-single-resource" title="Permalink to this headline">¶</a></h3>
<p>We’ve decided that we don’t like the entry we added &amp; edited earlier. Let’s
delete it (but leave the other objects alone):</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X DELETE  http://localhost:8000/api/v1/entry/4/</pre>
</div>
<p>Once again, we get back the “Accepted” response of a 204:</p>
<div class="highlight-python"><pre>HTTP/1.0 204 NO CONTENT
Date: Fri, 20 May 2011 07:28:01 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Length: 0
Content-Type: text/html; charset=utf-8</pre>
</div>
<p>If we request that resource, we get a 410 to show it’s no longer there:</p>
<div class="highlight-python"><pre>curl --dump-header - http://localhost:8000/api/v1/entry/4/

HTTP/1.0 410 GONE
Date: Fri, 20 May 2011 07:29:02 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Type: text/html; charset=utf-8</pre>
</div>
<p>Additionally, if we try to run the <tt class="docutils literal"><span class="pre">DELETE</span></tt> again (using the same original
command), we get the “Gone” response again:</p>
<div class="highlight-python"><pre>HTTP/1.0 410 GONE
Date: Fri, 20 May 2011 07:30:00 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Type: text/html; charset=utf-8</pre>
</div>
</div>
<div class="section" id="deleting-a-whole-collection-of-resources">
<h3>Deleting A Whole Collection Of Resources<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#deleting-a-whole-collection-of-resources" title="Permalink to this headline">¶</a></h3>
<p>Finally, it’s possible to remove an entire collection of resources. This is
as destructive as it sounds. Once again, we use the <tt class="docutils literal"><span class="pre">DELETE</span></tt> method, this
time on the entire list endpoint:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X DELETE  http://localhost:8000/api/v1/entry/</pre>
</div>
<p>As a response, we get:</p>
<div class="highlight-python"><pre>HTTP/1.0 204 NO CONTENT
Date: Fri, 20 May 2011 07:32:51 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Length: 0
Content-Type: text/html; charset=utf-8</pre>
</div>
<p>Hitting the list view:</p>
<div class="highlight-python"><pre>curl --dump-header - http://localhost:8000/api/v1/entry/</pre>
</div>
<p>Gives us a 200 but no objects:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span>
    <span class="s">"meta"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">"limit"</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
        <span class="s">"next"</span><span class="p">:</span> <span class="n">null</span><span class="p">,</span>
        <span class="s">"offset"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
        <span class="s">"previous"</span><span class="p">:</span> <span class="n">null</span><span class="p">,</span>
        <span class="s">"total_count"</span><span class="p">:</span> <span class="mi">0</span>
    <span class="p">},</span>
    <span class="s">"objects"</span><span class="p">:</span> <span class="p">[]</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="bulk-operations">
<h2>Bulk Operations<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#bulk-operations" title="Permalink to this headline">¶</a></h2>
<p>As an optimization, it is possible to do many creations, updates, and deletions to a collection in a single request by sending a <tt class="docutils literal"><span class="pre">PATCH</span></tt> to the list endpoint.:</p>
<div class="highlight-python"><pre>curl --dump-header - -H "Content-Type: application/json" -X PATCH --data '{"objects": [{"body": "Surprise! Another post!.", "pub_date": "2012-02-16T00:46:38", "slug": "yet-another-post", "title": "Yet Another Post"}], "deleted_objects": ["http://localhost:8000/api/v1/entry/4/"]}'  http://localhost:8000/api/v1/entry/</pre>
</div>
<p>We should get back:</p>
<div class="highlight-python"><pre>HTTP/1.0 202 ACCEPTED
Date: Fri, 16 Feb 2012 00:46:38 GMT
Server: WSGIServer/0.1 Python/2.7
Content-Length: 0
Content-Type: text/html; charset=utf-8</pre>
</div>
<p>The Accepted response means the server has accepted the request, but gives no details on the result. In order to see any created resources, we would need to do a get <tt class="docutils literal"><span class="pre">GET</span></tt> on the list endpoint.</p>
<p>For detailed information on the format of a bulk request, see <a class="reference internal" href="http://django-tastypie.readthedocs.org/en/latest/resources.html#patch-list"><em>patch_list</em></a>.</p>
</div>
<div class="section" id="you-did-it">
<h2>You Did It!<a class="headerlink" href="http://django-tastypie.readthedocs.org/en/latest/interacting.html#you-did-it" title="Permalink to this headline">¶</a></h2>
<p>That’s a whirlwind tour of interacting with a Tastypie API. There’s additional
functionality present, such as:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">POST</span></tt>/<tt class="docutils literal"><span class="pre">PUT</span></tt> the other supported content-types</li>
<li>More filtering/<tt class="docutils literal"><span class="pre">order_by</span></tt>/<tt class="docutils literal"><span class="pre">limit</span></tt>/<tt class="docutils literal"><span class="pre">offset</span></tt> tricks</li>
<li>Using overridden URLconfs to support complex or non-PK lookups</li>
<li>Authentication</li>
</ul>
<p>But this grounds you in the basics &amp; hopefully clarifies usage/debugging better.</p>
</div>
</div>


          <footer>
  
    <div class="rst-footer-buttons">
      
        <a href="http://django-tastypie.readthedocs.org/en/latest/settings.html" class="btn btn-neutral float-right" title="Tastypie Settings">Next <span class="icon icon-circle-arrow-right"></span></a>
      
      
        <a href="http://django-tastypie.readthedocs.org/en/latest/tutorial.html" class="btn btn-neutral" title="Getting Started with Tastypie"><span class="icon icon-circle-arrow-left"></span> Previous</a>
      
    </div>
  

  <hr>

  <p>
      © Copyright 2010-2013, Daniel Lindsley &amp; the Tastypie core team.
  </p>

  <a href="https://www.github.com/snide/sphinx_rtd_theme">Sphinx theme</a> provided by <a href="http://readthedocs.org/">Read the Docs</a>
</footer>
        </div>
      </div>

    </section>

  </div>
  

  <div class="rst-versions" data-toggle="rst-versions">
    <span class="rst-current-version" data-toggle="rst-current-version">
      <span class="icon icon-book"> Read the Docs</span>
      v: latest 
      <span class="icon icon-caret-down"></span>
    </span>
    <div class="rst-other-versions">
<div class="injected">

  

      <dl>
        <dt>Versions</dt>
        
           <strong> 
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/latest/">latest</a></dd>
              
           </strong> 
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.10.0/">v0.10.0</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.16/">v0.9.16</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.15/">v0.9.15</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.14/">v0.9.14</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.13/">v0.9.13</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.12/">v0.9.12</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.11/">v0.9.11</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.10/">v0.9.10</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.9/">v0.9.9</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.7/">v0.9.7</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.6/">v0.9.6</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.9.0/">v0.9.0</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.8.3/">v0.8.3</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.8.2/">v0.8.2</a></dd>
              
          
        
          
              
              <dd><a href="http://django-tastypie.readthedocs.org/en/v0.8.1/">v0.8.1</a></dd>
              
          
        
      </dl>
      <dl>
        <dt>Downloads</dt>
        
          <dd><a href="https://media.readthedocs.org/pdf/django-tastypie/latest/django-tastypie.pdf">PDF</a></dd>
        
          <dd><a href="https://media.readthedocs.org/htmlzip/django-tastypie/latest/django-tastypie.zip">HTML</a></dd>
        
          <dd><a href="https://media.readthedocs.org/epub/django-tastypie/latest/django-tastypie.epub">Epub</a></dd>
        
      </dl>
      <dl>
        <dt>On Read the Docs</dt>
          <dd>
            <a href="http://readthedocs.org/projects/django-tastypie/?fromdocs=django-tastypie">Project Home</a>
          </dd>
          <dd>
            <a href="http://readthedocs.org/builds/django-tastypie/?fromdocs=django-tastypie">Builds</a>
          </dd>
      </dl>
      
      <dl>
        <dt>On GitHub</dt>
          <dd>
            <a href="https://github.com/toastdriven/django-tastypie/blob/master/docs/interacting.rst">Edit</a>
          </dd>
      </dl>
      
      <hr>
      Free document hosting provided by <a href="https://readthedocs.org/">Read the Docs</a>. Support us on <a href="https://www.gittip.com/readthedocs/">Gittip</a>.

  

</div>
</div>
  </div>



</body></html>